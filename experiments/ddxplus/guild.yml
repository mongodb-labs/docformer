- model: origami
  operations:
    train:
      main: run_origami
      flags-dest: namespace:flags
      flags:
        model_size:
          default: medium
          choices: [xs, small, medium, large, xl]
        seed: 1234
        n_batches: 33000
        eval_data:
          default: validate
          choices: [validate, test]
        evidences:
          default: flat
          choices: [flat, object]
        limit: 0
        verbose: False

      requires:
        - file: .env.local
        - file: .env.remote

      # matches the guild_output_scalars() helper function
      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'

- config: shared-flags
  flags:
    limit:
      default: 0
      type: int

- model: lr
  operations:
    hyperopt:
      description: "hyper-parameter tuning of LogisticRegression baseline"
      main: run_baseline
      flags:
        $include: shared-flags
        model_name: LogisticRegression
        n_random_seeds:
          default: 1
        lr_penalty:
          choices: ["l1", "l2", "none"]
        lr_max_iter:
          choices: [10, 50, 100, 300, 500, 1000, 5000]
          type: int
        lr_fit_intercept:
          choices: [True, False]
        lr_C:
          choices: [1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1e0, 1e1, 1e2, 1e3, 1e4, 1e5]
          type: float

      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'

    train:
      description: "run LogisticRegression model with optimal hyperparams"
      main: run_baseline
      flags:
        $include: shared-flags
        model_name: LogisticRegression
        n_random_seeds:
          default: 5
        lr_penalty:
          default: "CHANGE HERE"
        lr_max_iter:
          default: 0
          type: int
        lr_fit_intercept:
          default: "CHANGE HERE"
        lr_C:
          default: 0
          type: float

      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'

- model: rf
  operations:
    hyperopt:
      description: "hyper-parameter tuning of RandomForest baseline"
      main: run_baseline
      flags:
        $include: shared-flags
        model_name: RandomForest
        n_random_seeds:
          default: 1
        rf_n_estimators:
          choices: [20, 50, 100, 150, 200]
          type: int
        rf_max_features:
          choices: ["log2", "sqrt", "none"]
        rf_max_depth:
          choices: [0, 1, 5, 10, 20, 30, 45, "none"]
        rf_min_samples_split:
          choices: [5, 10]
          type: int

      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'

    train:
      description: "run RandomForest model with optimal hyperparams"
      main: run_baseline
      flags:
        $include: shared-flags
        model_name: RandomForest
        n_random_seeds:
          default: 5
        rf_n_estimators:
          default: 0
          type: int
        rf_max_features:
          default: "CHANGE HERE"
        rf_max_depth:
          default: 0
        rf_min_samples_split:
          default: 0

      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'

- model: xgb
  operations:
    hyperopt:
      description: "hyper-parameter tuning of XGBoost baseline"
      main: run_baseline
      flags:
        $include: shared-flags
        model_name: XGBoost
        n_random_seeds:
          default: 1
        xgb_learning_rate:
          choices: [1e-7, 1e-6, 1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1.0]
          type: float
        xgb_max_depth:
          choices: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          type: int
        xgb_subsample:
          choices: [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
          type: float
        xgb_colsample_bytree:
          choices: [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
          type: float
        xgb_colsample_bylevel:
          choices: [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
          type: float
        xgb_min_child_weight:
          choices:
            [
              1e-16,
              1e-15,
              1e-14,
              1e-13,
              1e-12,
              1e-11,
              1e-10,
              1e-9,
              1e-8,
              1e-7,
              1e-6,
              1e-5,
              1e-4,
              1e-3,
              1e-2,
              1e-1,
              1.0,
              1e1,
              1e2,
              1e3,
              1e4,
              1e5,
            ]
          type: float
        xgb_reg_alpha:
          choices:
            [
              1e-16,
              1e-15,
              1e-14,
              1e-13,
              1e-12,
              1e-11,
              1e-10,
              1e-9,
              1e-8,
              1e-7,
              1e-6,
              1e-5,
              1e-4,
              1e-3,
              1e-2,
              1e-1,
              1.0,
              1e1,
              1e2,
            ]
          type: float
        xgb_reg_lambda:
          choices:
            [
              1e-16,
              1e-15,
              1e-14,
              1e-13,
              1e-12,
              1e-11,
              1e-10,
              1e-9,
              1e-8,
              1e-7,
              1e-6,
              1e-5,
              1e-4,
              1e-3,
              1e-2,
              1e-1,
              1.0,
              1e1,
              1e2,
            ]
          type: float
        xgb_gamma:
          choices:
            [
              1e-16,
              1e-15,
              1e-14,
              1e-13,
              1e-12,
              1e-11,
              1e-10,
              1e-9,
              1e-8,
              1e-7,
              1e-6,
              1e-5,
              1e-4,
              1e-3,
              1e-2,
              1e-1,
              1.0,
              1e1,
              1e2,
            ]
          type: float
        xgb_n_estimators:
          choices: [100, 200, 500, 1000, 1500, 2000, 3000, 4000, 5000]
          type: int

      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'

    train:
      description: "run XGBoost model with optimal hyperparams"
      main: run_baseline
      flags:
        $include: shared-flags
        model_name: XGBoost
        n_random_seeds:
          default: 5
        xgb_learning_rate:
          default: 0
        xgb_max_depth:
          default: 0
        xgb_subsample:
          default: 0
        xgb_colsample_bytree:
          default: 0
        xgb_colsample_bylevel:
          default: 0
        xgb_min_child_weight:
          default: 0
        xgb_reg_alpha:
          default: 0
        xgb_reg_lambda:
          default: 0
        xgb_gamma:
          default: 0
        xgb_n_estimators:
          default: 0

      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'

- model: lgb
  operations:
    hyperopt:
      description: "hyper-parameter tuning of LightGBM baseline"
      main: run_baseline
      flags:
        $include: shared-flags
        model_name: LightGBM
        n_random_seeds:
          default: 1
        lgb_num_leaves:
          choices: [5, 10, 20, 30, 40, 50]
          type: int
        lgb_max_depth:
          choices:
            [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
          type: int
        lgb_learning_rate:
          choices: [1e-3, 1e-2, 1e-1, 1.0]
          type: float
        lgb_n_estimators:
          choices: [50, 100, 200, 500, 1000, 1500, 2000]
          type: int
        lgb_min_child_weight:
          choices: [1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 1.0, 1e1, 1e2, 1e3, 1e4]
          type: float
        lgb_subsample:
          choices: [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8]
          type: float
        lgb_colsample_bytree:
          choices: [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8]
          type: float
        lgb_reg_alpha:
          choices: [0, 1e-1, 1, 2, 5, 7, 10, 50, 100]
        lgb_reg_lambda:
          choices: [0, 1e-1, 1, 2, 5, 7, 10, 50, 100]

      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'

    train:
      description: "run LightGBM model with optimal hyperparams"
      main: run_baseline
      flags:
        $include: shared-flags
        model_name: LightGBM
        n_random_seeds:
          default: 5
        lgb_num_leaves:
          default: 0
        lgb_max_depth:
          default: 0
          type: int
        lgb_learning_rate:
          default: 0
        lgb_n_estimators:
          default: 0
        lgb_min_child_weight:
          default: 0
        lgb_subsample:
          default: 0
        lgb_colsample_bytree:
          default: 0
          type: float
        lgb_reg_alpha:
          default: 0
        lgb_reg_lambda:
          default: 0

      output-scalars:
        - step: '\|  step: (\step)'
        - '\|  (\key): (\value)'
